h1 = @performer.title
div style="opacity: 0.5" = Artist.find(@performer.old_id).tagsstr
== slim :tags_form, locals: {performer: @performer}
br

audio#main-player preload="none" controls="controls" style="width: 500px"

h2 Records
- ratings = %w(🙂 🏵 💎)
- prev_release = 0
- @performer.sorted_records.reverse.each do |r|
  - if r.release_id != prev_release
    h4
      = r.release.title
      - if r.release.download_cover
        a< class="cover-link" href=r.release.download_cover &#128444
      span< style="font-weight: normal; opacity: 0.5" = Album.find(r.release.old_id).tagsstr
    - prev_release = r.release_id
  li
    a.ajax-link.track-playback-link data-track-url=r.download_path href=r.download_path = "##{r.id} #{ratings[r.rating]} #{r.original_filename}"
    span< style="opacity: 0.5" = Track.find(r.old_id).tagsstr
    span< == "| #{mediainfo(r.mediainfo)}"

h2 Releases
ul.releases-list
  - @performer.releases.order(title: :asc).each do |r|
    li = r.title

javascript:
  var playlist = [];
  var play_index = 0;

  $(document).on('click', '.toggle-link', function(){
    var target = $(this).data('target');
    $(target).toggle();
  });

  $(document).on('click', '.track-playback-link', function(event){
    event.preventDefault();

    var track_url = $(this).data('track-url');
    playlist = [];
    $('.track-playback-link').each(function(){
      var url = $(this).data('track-url');
      playlist.push(url);
      console.log(url);
      if (url == track_url) {
        play_index = playlist.length - 1;
      }
    });
    
    play();
  });

  function play(){
    $('#main-player').attr('src', playlist[play_index]);
    $('#main-player')[0].play();
    $('.track-now-playing').removeClass('track-now-playing');
    $('.track-playback-link').each(function(){
      if ($(this).data('track-url') == playlist[play_index]) {
        $(this).addClass('track-now-playing')
      }
    });
  }

  $('#main-player').on('ended', function(){
    play_index = play_index + 1;
    if (play_index < playlist.length) {
      $('#main-player')[0].currentTime = 0;
      play();
    }
  });
